name: HADN_x2_ychannel
suffix: ~  # add suffix to saved images
model_type: SRModel
scale: 2
crop_border: ~  # crop border when evaluation. If None, crop the scale pixels
num_gpu: 0  # set num_gpu: 0 for cpu mode
manual_seed: 0

datasets:
  # test_1:
  #   name: DIV2K
  #   type: PairedImageDataset
  #   dataroot_gt: ./data/DF2K/DIV2K_test_HR
  #   dataroot_lq: ./data/DF2K/DIV2K_test_LR_X2
  #   io_backend:
  #     type: disk
  test_2:
    name: Set5
    type: PairedImageDataset
    dataroot_gt: ./data/benchmark/Set5/HR
    dataroot_lq: ./data/benchmark/Set5/LR_bicubic/X2
    io_backend:
      type: disk
  test_3:
    name: Set14
    type: PairedImageDataset
    dataroot_gt: ./data/benchmark/Set14/HR
    dataroot_lq: ./data/benchmark/Set14/LR_bicubic/X2
    io_backend:
      type: disk
  # test_4:
  #   name: B100
  #   type: PairedImageDataset
  #   dataroot_gt: ./data/benchmark/B100/HR
  #   dataroot_lq: ./data/benchmark/B100/LR_bicubic/X2
  #   io_backend:
  #     type: disk

  # test_5:
  #   name: Urban100
  #   type: PairedImageDataset
  #   dataroot_gt: ./data/benchmark/Urban100/HR
  #   dataroot_lq: ./data/benchmark/Urban100/LR_bicubic/X2
  #   io_backend:
      type: disk


# network structures
network_g:
  type: HADN
  num_in_ch: 3
  num_feat: 64
  num_block: 8
  num_out_ch: 3
  upscale: 2
  # change_c: 15
  conv: BSConvU

# path
path:
  pretrain_network_g: ./pretrain_model/net_g_HADN_x2.pth
  strict_load_g: true

# validation settings
val:
  save_img: true
  suffix: ~  # add suffix to saved images, if None, use exp name
  pbar: true
  metrics:
    psnr: # metric name, can be arbitrary
      type: calculate_psnr
      crop_border: 2
      test_y_channel: true
    ssim:
      type: calculate_ssim
      crop_border: 2
      test_y_channel: true
